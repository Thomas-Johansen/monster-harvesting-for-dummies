// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using monsters.backend.Services;

#nullable disable

namespace monsters.backend.Migrations
{
    [DbContext(typeof(AppDb))]
    [Migration("20250914005318_ProperCreatureTypes")]
    partial class ProperCreatureTypes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("monsters.backend.Models.CCLink", b =>
                {
                    b.Property<Guid>("CreatureTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ComponentId")
                        .HasColumnType("uuid");

                    b.Property<int>("DifficultyClass")
                        .HasColumnType("integer");

                    b.HasKey("CreatureTypeId", "ComponentId");

                    b.HasIndex("ComponentId");

                    b.ToTable("CCLink");
                });

            modelBuilder.Entity("monsters.backend.Models.Component", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Components");
                });

            modelBuilder.Entity("monsters.backend.Models.CreatureType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AssociatedSkill")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("CreatureTypes");
                });

            modelBuilder.Entity("monsters.backend.Models.CCLink", b =>
                {
                    b.HasOne("monsters.backend.Models.Component", "Component")
                        .WithMany("CreatureLinks")
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("monsters.backend.Models.CreatureType", "CreatureType")
                        .WithMany("ComponentLinks")
                        .HasForeignKey("CreatureTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Component");

                    b.Navigation("CreatureType");
                });

            modelBuilder.Entity("monsters.backend.Models.Component", b =>
                {
                    b.Navigation("CreatureLinks");
                });

            modelBuilder.Entity("monsters.backend.Models.CreatureType", b =>
                {
                    b.Navigation("ComponentLinks");
                });
#pragma warning restore 612, 618
        }
    }
}
